* 전체
hexadecimal 에 특수문자가 들어가 있다.
헥사코드를 파싱하면서 OneLeaf 결과와 비교하여
특수문자를 일일이 디코딩시에 제거하고 있음.
찾지못한 특수문자가 있을수도 있음.

* OrderAppKind: 판단 알고리즘?
BM의 경우
신배민과 구배민은 영수증 포맷이 달라서 파싱시에는 구분하여야 한다.
또한 포장과 배달 또한 영수증 포맷이 완전히 달라서 파싱시 구분이 되어야 한다.
배민원 또한 신배민, 구배민에 따라서 영수증 포맷이 다르다.
공통적인 부분이 존재하긴 하지만,
BM의 경우 신배민/포장, 신배민/배달, 구배민/포장, 구배민/배달, 신배민 - 배민원, 구배민 - 배민원
이렇게 6가지로 구분하여 파싱해야 한다.
배민원의 경우 포장이 없어서 그런건지 모르겠으나 관련 데이터가 없어서 제외했다.

배민원판단:
신배민/배민원 - hexadecimal 에 "배민1 주문전표" 이 들어있는 경우
구배민/배민원 - hexadecimal 에 "배민1주문" 이 들어있는 경우

신배민 판단:
"주문번호:B1" 이 포함되어있고,
"배달 주문전표" 가 들어가 있으면 신배민/배달이고
"포장 주문전표" 가 들어가 있으면 신배민/포장이다.

구배민 판단:
"주문번호:B1" 이 포함되어있고,
"사전결제 여부:" 가 들어가 있다.
포장의 경우 "포장 접수번호" 가 추가적으로 들어가 있는지를 판단해서
있으면 구배민/포장 없으면 구배민/배달로 판단한다.
구배민/배민원의 경우도 "사전결제 여부" 가 있으므로 위에 로직이 먼저 수행이 되어야 한다.

